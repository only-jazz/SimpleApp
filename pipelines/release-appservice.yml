trigger: none

variables:
  # This variable group must exist & populated with acr-password
  - group: shared-secrets

  - name: app-name
    value: 'nodejs-demoapp'
  - name: res-group
    value: 'Demo.AppService'
  - name: azure-connection
    value: 'Azure (AIRS)'
  - name: acr-name
    value: 'bcdemo'
  - name: appservice-plan
    value: 'SharedAppPlanLinux'
  - name: location
    value: 'North Europe'

stages:
#
# Test
#
- stage: deployTest
  displayName: 'Test'

  variables:
    appservice-name: '$(app-name)-test'

  jobs:
  - template: templates/arm-app-service.yml
    parameters:
      envName: Test

#
# Staging
#
- stage: deployStaging
  displayName: 'Staging'

  variables:
    appservice-name: '$(app-name)-staging'

  jobs:
  - template: templates/arm-app-service.yml
    parameters:
      envName: Staging

#
# Prod
#
- stage: deployProd
  displayName: 'Prod'

  variables:
    appservice-name: '$(app-name)'

  jobs:
  - template: templates/arm-app-service.yml
    parameters:
      envName: Prod   

  - job: configureProdApp
    dependsOn: deployToAppService
    displayName: 'Configure Prod App Settings'
    variables:
      # This variable group must exist & populated with all the vars in the configureProdApp job
      - group: nodejs-demoapp-vars
    pool:
      vmImage: Ubuntu-16.04
    steps:
      - task: AzureCLI@1
        displayName: 'Set webapp config'
        inputs:
          azureSubscription: 'Azure (AIRS)'
          scriptLocation: inlineScript
          inlineScript: |
            az webapp config appsettings set -g $(res-group) -n $(appservice-name) --settings \
            RELEASE=$(Build.BuildNumber) \
            TODO_MONGO_DB=$(mongo-db-name) \
            APPINSIGHTS_INSTRUMENTATIONKEY=$(app-insights-key) \
            WEATHER_API_KEY=$(weather-key) \
            AAD_APP_SECRET=$(aad-app-secret) \
            AAD_APP_ID=$(aad-app-id) \
            AAD_REDIRECT_URL_BASE=$(aad-redirect-url) \
            TODO_MONGO_CONNSTR=$(mongo-db-connstr)

  - job: removeNonProd
    displayName: 'Remove Non Prod Apps'
    pool:
      vmImage: Ubuntu-16.04
    steps:
      - task: AzureCLI@1
        displayName: 'Remove Web Apps'
        inputs:
          azureSubscription: 'Azure (AIRS)'
          scriptLocation: inlineScript
          inlineScript: |
            az webapp delete -n $(app-name)-staging -g $(res-group)
            az webapp delete -n $(app-name)-test -g $(res-group) 